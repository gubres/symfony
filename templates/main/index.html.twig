{% extends 'base.html.twig' %}

{% block title %}FAMOSOS{% endblock %}

{% block body %}
<div class="container mt-4">


    <button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#miModal">
        Nuevo famoso
    </button>


    {% block modales %}
        {# modal para insertar datos #}
        <div class="modal fade" id="miModal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
            <div class="modal-dialog modal-sm">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">INSERIR FAMOSO✅</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                        <div class="modal-body">
                        {{ form_start(form, {'attr': {'id': 'miFormulario', 'class': 'w-100'}}) }}
                        
                        {% include '/main/formulario.html.twig' %}

                     
                    </div>
                    <div class="modal-footer">
                        <button type="reset" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" id="confirmarEnvio" class="btn btn-primary">Confirmar</button>
                        
                    </div>
                       {{ form_end(form) }}
                </div>
            </div>
        </div>

        {# modal para actualizar datos #}
        <div class="modal fade" id="editarModal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
            <div class="modal-dialog modal-sm">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">EDITAR FAMOSO✅</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" id="editarModalBody">

                     {% include '/main/editarForm.html.twig' %}

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" form="editarForm" class="btn btn-primary">Confirmar</button>
                    </div>
                </div>
            </div>
        </div>

        {# datos de la tabla #}
        <div class="modal-body">
            {% include '/famosos/datostabla.html.twig' %}
        </div>

        {# modal de mensajes #}
        <div class="modal-body">
            {% include '/main/modal.html.twig' %}
        </div>

    {% endblock %}
</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>

    $(document).ready(function() {
        $('#miModal').on('show.bs.modal', function(e) {
            // resetea el formulario completo dejando sin datos
            $('#miFormulario').trigger('reset');
        });

        // cuando el modal está completamente abierto enfoca el primer campo
        $('#miModal').on('shown.bs.modal', function(e) {
            $('#miFormulario input:first').focus();
        });

        $('#editarModal').on('show.bs.modal', function(e) {
            // resetea el formulario de edicion completamente para poder visualizar el nuevo dato
            $('#editarForm  ').trigger('reset');
        });


        // ese evento carga los datos del famoso en el formulario
        $(document).on('click', '.editarBtn', function() {
            const famosoId = $(this).data('id');
            const url = `/info/${famosoId}`;

            // aqui se hace una solicitud para obtener los datos del famoso
            fetch(url)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Error en la respuesta');
                    }
                    return response.json();
                })
                .then(data => {
                    // aqui se rellena el formulario con los datos obtenidos
                    $('#id_famoso').val(data.id);
                    $('#inputNombre').val(data.nombre);
                    $('#inputApellido').val(data.apellido);
                    $('#inputProfesion').val(data.profesion);

                    // se muestra la ventana modal con el formulario rellenado
                    $('#editarModal').modal('show');
                })
                .catch(error => console.error('Error:', error));
        });

        // manejo envío del formulario de edición
        $('#editarForm').on('submit', function(e) {
            e.preventDefault();

            let nombre = $('#inputNombre').val().trim();
            let apellido = $('#inputApellido').val().trim();
            let profesion = $('#inputProfesion').val().trim();
            
            // una regex para validar que el texto contenga solo letras y espacios
            let regex = /^[A-Za-z\s]+$/;
            
            if (!nombre || !apellido || !profesion) {
                alert('Todos los campos son obligatorios.');
                return;
            }
            if (!regex.test(nombre) || !regex.test(apellido) || !regex.test(profesion)) {
                alert('Nombre, apellido y profesión solo deben contener letras y espacios.');
                return;
            }
            const famosoId = $('#id_famoso').val();
            const formData = new FormData(this);

            fetch(`/editar/${famosoId}`, {
                method: 'POST',
                body: formData,
            })
            .then(response => response.json())
            .then(data => {
                if(data.success) {
                    $('#editarModal').modal('hide');
                    mostrarSuccessModal(nombre + ' actualizado con éxito.');
                    $('#famososTabla').DataTable().ajax.reload();
                } else {
                    throw new Error(data.message || 'Error al actualizar el famoso. Por favor, intente nuevamente.');
                        }
            })
            .catch(error => {
            console.error('Error:', error);
                        mostrarErrorModal(error.message);
            });
        });
    });

    //evento para borrar un dato de famoso
    $(document).ready(function() {
    $(document).on('click', '.btnDelete', function(event){
        event.preventDefault();
        let id = $(this).data('id');
        let nombre = $(this).data('nombre');
        
        confirmDelete(nombre, function() {
            $.ajax({
            url: `/main/index/${id}`,
            method: 'GET', 
            success: function(response) {
                if (response.success) {
                     mostrarSuccessModal(nombre + ' eliminado con éxito');
                    $('#famososTabla').DataTable().ajax.reload(null, false);
                } else {
                    console.error('Error al eliminar el famoso');
                    mostrarErrorModal('Error al eliminar el famoso');
                }
            },
            error: function(error) {
                console.error('Error al eliminar el famoso', error);
                mostrarErrorModal('Error técnico: ' + error.message);
            }
            });
        });
        });
    });

    function confirmDelete(nombre, callback) {
        $('#deleteText').text(`¿Está seguro? Esta acción irá borrar "${nombre}".`);
        $('#confirmDeleteModal').modal('show');

        $('#confirmDeleteButton').off('click').on('click', function() {
            callback(); // Ejecuta la función callback si el usuario confirma
            $('#confirmDeleteModal').modal('hide');
        });
    }

    function mostrarSuccessModal(mensaje) {
        $('#successModalText').text(mensaje);
        $('#successModal').modal('show');
    }

    function mostrarErrorModal(mensaje) {
        $('#errorModalText').text(mensaje); 
        $('#errorModal').modal('show'); 
    }

    function configurarBotones() {
        return [
            {
                extend: 'excelHtml5',
                text: '<i class="fas fa-file-excel"></i> Exportar a Excel',
                className: 'btn btn-success',
                title: 'Datos de Famosos',
                exportOptions: {
                    columns: [0, 1, 2, 3]
                }
            },
            {
                extend: 'pdfHtml5',
                text: '<i class="fas fa-file-pdf"></i> Exportar a PDF',
                className: 'btn btn-danger',
                title: 'Datos de Famosos',
                orientation: 'portrait',
                pageSize: 'A4',
                exportOptions: {
                    columns: [0, 1, 2, 3]
                },
                customize: function(doc) {
                    // Centrar la tabla en la página PDF
                    var docContent = doc.content[1];
                    docContent.margin = [ 0, 0, 0, 0 ]; // [left, top, right, bottom]
                    docContent.table.widths = Array(docContent.table.body[0].length + 1).join('*').split('');
                    // En ese apartado se puede ajustar para cambiar la posición de la tabla horizontalmente
                    docContent.layout = {
                        hLineWidth: function(i, node) {
                            return 0.5;
                        },
                        vLineWidth: function(i, node) {
                            return 0.5;
                        },
                        hLineColor: function(i, node) {
                            return '#aaa';
                        },
                        vLineColor: function(i, node) {
                            return '#aaa';
                        },
                        paddingLeft: function(i, node) {
                            return 4;
                        },
                        paddingRight: function(i, node) {
                            return 4;
                        },
                        paddingTop: function(i, node) {
                            return 2;
                        },
                        paddingBottom: function(i, node) {
                            return 2;
                        }
                    };
                }
            },
            {
                extend: 'print',
                text: '<i class="fas fa-print"></i> Imprimir',
                className: 'btn btn-info',
                title: 'Datos de Famosos',
                exportOptions: {
                    columns: [0, 1, 2, 3]
                }
            },
            {
                extend: 'copy',
                text: '<i class="fas fa-copy"></i> Copiar',
                className: 'btn btn-primary',
                exportOptions: {
                    columns: [0, 1, 2, 3]
                }
            }
        ];
    }

    $(document).ready(function() {
        let table = $('#famososTabla').DataTable({
            "processing": true,
            "serverSide": true,
            "responsive": true, 
            "autoWidth": false,
            "ajax": "{{ path('datos_tabla') }}",
            "columns": [
                { "data": "id" },
                { "data": "nombre" },
                { "data": "apellido" },
                { "data": "profesion" },
                { "data": "editar", "orderable": false },
                { "data": "borrar", "orderable": false }
                ],
            language: {
                'url': 'https://cdn.datatables.net/plug-ins/1.10.20/i18n/Spanish.json'
            },  dom: '<"row"<"col-sm-3"l><"col-sm-5"B><"col-sm-3"f>>rt<"row"<"col-sm-7"p><"col-sm-5"i>>',
            buttons: configurarBotones()
        });

        $('#miFormulario').on('submit', function(e) {
            e.preventDefault();

            let nombre = $("input[name*='nombre']").val().trim();
            let apellido = $("input[name*='apellido']").val().trim();
            let profesion = $("input[name*='profesion']").val().trim();
            let regex = /^[A-Za-z\s]+$/;

            if (!nombre || !apellido || !profesion) {
                alert('Todos los campos son obligatorios.');
                return;
            }

            if (!regex.test(nombre) || !regex.test(apellido) || !regex.test(profesion)) {
                alert('Nombre, apellido y profesión solo deben contener letras y espacios.');
                return;
            }

            const formData = new FormData(this);
            
            fetch('{{ path("form_datos") }}', {
                method: 'POST',
                body: formData,
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    $('#miModal').modal('hide');
                    mostrarSuccessModal('Los datos han sido enviados exitosamente.');
                    table.ajax.reload();
                } else {
                
                mostrarErrorModal('Error al enviar los datos. Por favor, intente nuevamente.');
                }
            })
            .catch((error) => {
                console.error('Error:', error);
                mostrarErrorModal(error.message);
            });
        });
    });
    </script>
{% endblock %}